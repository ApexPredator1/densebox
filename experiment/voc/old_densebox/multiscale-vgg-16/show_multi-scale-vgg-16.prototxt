name: "CaffeNet"
layer  {
  name: "data"
  type: "FCNImageData"
  top: "data"
  top: "label-all"
  fcn_image_data_param{
  	fcn_image_data_common_param{
		scale_base: 0.54
		scale_base: 0.72
		scale_base: 0.86
		scale_base: 1
		
		scale_choose_strategy: RANDOM
		scale_positive_lower_bounder: 0.8
		scale_positive_upper_bounder: 1.25
		scale_ignore_lower_bounder: 0.7
		scale_ignore_upper_bounder: 1.43
		input_height: 240
		input_width: 240
		heat_map_a: 8
		heat_map_b: 4
		out_height: 30
		out_width:  30
		num_anno_points_per_instance: 8
		single_thread: false
	}
	
	fcn_image_data_source_param{
		pos_samples_source: "/home/vis/huanglichao/dataset/VOC/annotations/origional_test_jpg.txt"
		pos_img_folder: "/home/vis/huanglichao/dataset/VOC/cropped_images/"
 
		batch_size: 10
		shuffle:  false # true
	}
	
	fcn_image_data_reader_param{
		scale_lower_limit: 0.8
		scale_upper_limit: 1.25
		roi_center_point: 4
		standard_len_point_1: 0	
		standard_len_point_2: 2
		standard_len: 140 
		mean_r: 114.3750  
		mean_g: 108.3747
		mean_b: 99.9598
		random_rotate_degree: 0 
	}
	
	fcn_image_data_detection_box_param{
		min_output_pos_radius:  1
		need_detection_loc_diff: true
		bbox_height: 100
		bbox_width: 100
		bbox_size_norm_type: DIAG
		bbox_point_id: 0
		bbox_point_id: 2 
		class_flag_id: 5
		total_class_num: 20
		bbox_valid_dist_ratio: 0.2
		bbox_loc_diff_valid_dist_ratio: 0.2
		ignore_margin:  2
	}
  }
 
}


layer{
	name:"slice_label"
	type:"Slice"
	bottom:"label-all"
	top: "label-s1-score"
	top: "label-s2-score"
	top: "label-s3-score"
	top: "label-s4-score"
	top: "label-s1-ignore"
	top: "label-s2-ignore"
	top: "label-s3-ignore"
	top: "label-s4-ignore"
	top: "label-s1-bbox"
 	top: "label-s2-bbox"
	top: "label-s3-bbox"
	top: "label-s4-bbox"
	slice_param{
		slice_point: 20
		slice_point: 40
		slice_point: 60
		slice_point: 80
		slice_point: 100
		slice_point: 120
		slice_point: 140
		slice_point: 160
		slice_point: 240
		slice_point: 320
		slice_point: 400
	}
}

layer{
	name: "mvn_data"
	type: "Power"
	bottom: "data"
	top: "mvn_data"
	power_param{
		power: 1 
		scale: 0.01
		shift: 0
	}
}

########### vgg 16 start #########

layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "mvn_data"
  top: "conv1_1"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
	pad: 1
    stride: 1
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}


layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}

layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type:  "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}



layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}

layer {
  bottom: "conv3_3"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type:  "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { 
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}


layer {
  bottom: "conv4_3"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type:  "ReLU"
}
layer {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { 
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3"
  type: "ReLU"
}

########### scale_base: 0.54   use conv4_3 #########

layer{
	type: "Convolution"
	name: "conv-fc-scale-1"
	bottom: "conv4_3"
	top: "conv-fc-scale-1"
    param{
    	lr_mult: 1
  		decay_mult: 1
    }
    param{
    	lr_mult: 2
  		decay_mult: 0
    }
    convolution_param {
      num_output: 512
      kernel_size: 1
      weight_filler {
        type: "xavier"
        # type: "gaussian"
        # std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
}

layer { 
  bottom: "conv-fc-scale-1"
  top: "conv-fc-scale-1"
  name: "relu-fc-scale-1"
  type: "ReLU"
}

layer{
	type: "Dropout"
	name: "dropout-scale-1"
	bottom: "conv-fc-scale-1"
	top: "conv-fc-scale-1"
	dropout_param{
		dropout_ratio: 0.5
	}
}

layer{
	type: "Convolution"
	name: "conv-out-scale-1"
	bottom: "conv-fc-scale-1"
	top: "conv-out-scale-1"
    param{
    	lr_mult: 1
  		decay_mult: 1
    }
    param{
    	lr_mult: 2
  		decay_mult: 0
    }
    convolution_param {
      num_output: 100
      kernel_size: 1
      weight_filler {
        type: "xavier"
        #type: "gaussian"
        #std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
}

layer{
	name: "slice-scale-1"
	type: "Slice"
	bottom: "conv-out-scale-1"
	top: "score-scale-1"
	top: "bbox-scale-1"
	slice_param{
		slice_point: 20
	}
}
 

########### scale_base: 0.72  use conv5_1 #########
layer {
  bottom: "conv5_1"
  top: "conv5_1_reduce"
  name: "conv5_1_reduce"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { 
  bottom: "conv5_1_reduce"
  top: "conv5_1_reduce"
  name: "relu5_1_reduce"
  type: "ReLU"
}

layer{
	type: "Resize"
	name: "conv5_1_reduce_large"
	bottom: "conv5_1_reduce"
	top: "conv5_1_reduce_large"
	resize_param{
		is_pyramid_test: true
		out_height_scale: 2
		out_width_scale: 2
	}
}

 

layer{
	type: "Convolution"
	name: "conv-fc-scale-2"
	bottom: "conv5_1_reduce_large"
	top: "conv-fc-scale-2"
    param{
    	lr_mult: 1
  		decay_mult: 1
    }
    param{
    	lr_mult: 2
  		decay_mult: 0
    }
    convolution_param {
      num_output: 512
      kernel_size: 3
	  pad: 1
      weight_filler {
         type: "xavier"
        # type: "gaussian"
        # std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
}

layer { 
  bottom: "conv-fc-scale-2"
  top: "conv-fc-scale-2"
  name: "relu-fc-scale-2"
  type: "ReLU"
}

layer{
	type: "Dropout"
	name: "dropout-scale-2"
	bottom: "conv-fc-scale-2"
	top: "conv-fc-scale-2"
	dropout_param{
		dropout_ratio: 0.5
	}
}

layer{
	type: "Convolution"
	name: "conv-out-scale-2"
	bottom: "conv-fc-scale-2"
	top: "conv-out-scale-2"
    param{
    	lr_mult: 1
  		decay_mult: 1
    }
    param{
    	lr_mult: 2
  		decay_mult: 0
    }
    convolution_param {
      num_output: 100
      kernel_size: 1
      weight_filler {
        type: "xavier"
        #type: "gaussian"
        #std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
}

layer{
	name: "slice-scale-2"
	type: "Slice"
	bottom: "conv-out-scale-2"
	top: "score-scale-2"
	top: "bbox-scale-2"
	slice_param{
		slice_point: 20
	}
}
 
########### scale_base: 0.87 use conv4_2 #########
layer {
  bottom: "conv5_2"
  top: "conv5_2_reduce"
  name: "conv5_2_reduce"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { 
  bottom: "conv5_2_reduce"
  top: "conv5_2_reduce"
  name: "relu5_2_reduce"
  type: "ReLU"
}

layer{
	type: "Resize"
	name: "conv5_2_reduce_large"
	bottom: "conv5_2_reduce"
	top: "conv5_2_reduce_large"
	resize_param{
		is_pyramid_test: true
		out_height_scale: 2
		out_width_scale: 2
	}
}

 

layer{
	type: "Convolution"
	name: "conv-fc-scale-3"
	bottom: "conv5_2_reduce_large"
	top: "conv-fc-scale-3"
    param{
    	lr_mult: 1
  		decay_mult: 1
    }
    param{
    	lr_mult: 2
  		decay_mult: 0
    }
    convolution_param {
      num_output: 512
      kernel_size: 3
	  pad: 1
      weight_filler {
         type: "xavier"
        # type: "gaussian"
        # std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
}


layer { 
  bottom: "conv-fc-scale-3"
  top: "conv-fc-scale-3"
  name: "relu-fc-scale-3"
  type: "ReLU"
}

layer{
	type: "Dropout"
	name: "dropout-scale-3"
	bottom: "conv-fc-scale-3"
	top: "conv-fc-scale-3"
	dropout_param{
		dropout_ratio: 0.5
	}
}

layer{
	type: "Convolution"
	name: "conv-out-scale-3"
	bottom: "conv-fc-scale-3"
	top: "conv-out-scale-3"
    param{
    	lr_mult: 1
  		decay_mult: 1
    }
    param{
    	lr_mult: 2
  		decay_mult: 0
    }
    convolution_param {
      num_output: 100
      kernel_size: 1
      weight_filler {
        type: "xavier"
        # type: "gaussian"
        # std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
}

layer{
	name: "slice-scale-3"
	type: "Slice"
	bottom: "conv-out-scale-3"
	top: "score-scale-3"
	top: "bbox-scale-3"
	slice_param{
		slice_point: 20
	}
}
 
########### scale_base: 1 use conv4_3 #########

layer {
  bottom: "conv5_3"
  top: "conv5_3_reduce"
  name: "conv5_3_reduce"
  type: "Convolution"
  param{
  	lr_mult: 1
	decay_mult: 1
  }
  param{
  	lr_mult: 2
	decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { 
  bottom: "conv5_3_reduce"
  top: "conv5_3_reduce"
  name: "relu5_3_reduce"
  type: "ReLU"
}

layer{
	type: "Resize"
	name: "conv5_3_reduce_large"
	bottom: "conv5_3_reduce"
	top: "conv5_3_reduce_large"
	resize_param{
		is_pyramid_test: true
		out_height_scale: 2
		out_width_scale: 2
	}
}

 


layer{
	type: "Convolution"
	name: "conv-fc-scale-4"
	bottom: "conv5_3_reduce_large"
	top: "conv-fc-scale-4"
    param{
    	lr_mult: 1
  		decay_mult: 1
    }
    param{
    	lr_mult: 2
  		decay_mult: 0
    }
    convolution_param {
      num_output: 512
      kernel_size: 3
	  pad: 1
      weight_filler {
        type: "xavier"
        # type: "gaussian"
        # std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
}

layer { 
  bottom: "conv-fc-scale-4"
  top: "conv-fc-scale-4"
  name: "relu-fc-scale-4"
  type: "ReLU"
}

layer{
	type: "Dropout"
	name: "dropout-scale-4"
	bottom: "conv-fc-scale-4"
	top: "conv-fc-scale-4"
	dropout_param{
		dropout_ratio: 0.5
	}
}

layer{
	type: "Convolution"
	name: "conv-out-scale-4"
	bottom: "conv-fc-scale-4"
	top: "conv-out-scale-4"
    param{
    	lr_mult: 1
  		decay_mult: 1
    }
    param{
    	lr_mult: 2
  		decay_mult: 0
    }
    convolution_param {
      num_output: 100
      kernel_size: 1
      weight_filler {
        type: "xavier"
        # type: "gaussian"
        # std: 0.01
      }
      bias_filler {
        type: "constant"
        value: 0
      }
    }
}

layer{
	name: "slice-scale-4"
	type: "Slice"
	bottom: "conv-out-scale-4"
	top: "score-scale-4"
	top: "bbox-scale-4"
	slice_param{
		slice_point: 20
	}
}
 
layer{
	type: "Concat"
	name: "concat_all"
	bottom: "score-scale-1"
	bottom: "score-scale-2"
	bottom: "score-scale-3"
	bottom: "score-scale-4"
	bottom: "score-scale-1"
	bottom: "score-scale-2"
	bottom: "score-scale-3"
	bottom: "score-scale-4"
	bottom: "bbox-scale-1"
	bottom: "bbox-scale-2"
	bottom: "bbox-scale-3"
	bottom: "bbox-scale-4"
	top: "res_all"
}

layer{
	type: "EuclideanLoss"
	name: "loss"
	bottom: "res_all"
	bottom: "label-all"

}
